Assignment 1
#include <stdio.h>  
#include <conio.h>  
  
int main ()  
{ 
    int arr[50];  
    int pos, i, num;
    printf (" \n Enter the number of elements in an array: \n ");  
    scanf (" %d", &num);  
      
    printf (" \n Enter %d elements in array: \n ", num);  
      
    
    for (i = 0; i < num; i++ )  
    {   printf (" arr[%d] = ", i);  
        scanf (" %c", &arr[i]);  
    }  
      
    
    printf( " Define the position of the array element where you want to delete: \n ");  
    scanf (" %d", &pos);  
      
     
    if (pos >= num+1)  
    {  
        printf (" \n Deletion is not possible in the array.");  
    }  
    else  
    {  
       
        for (i = pos - 1; i < num -1; i++)  
        {  
            arr[i] = arr[i+1]; // assign arr[i+1] to arr[i]  
        }  
          
        printf (" \n The resultant array is: \n");  
          
        
        for (i = 0; i< num - 1; i++)  
        {  
            printf (" arr[%d] = ", i);  
            printf (" %c \n", arr[i]);  
        }  
    }  
    return 0;  
}  

----------------------------------------------------------

include <stdio.h>    
     
int main()    
{    
        
    int arr[] = {25, 11, 7, 75, 56};      
        
 
    int length = sizeof(arr)/sizeof(arr[0]);    
        
      
    int min = arr[0];    
        
 
    for (int i = 0; i < length; i++) {     
         
       if(arr[i] < min)    
           min = arr[i];    
    }      
    printf("Smallest element present in given array: %d\n", min);    
    return 0;    
}    

----------------------------------------------------------

#include <stdio.h>    
int main()    
{    
   
    int arr[] = {1, 2, 3, 4, 5};     
    int sum = 0;    
        

    int length = sizeof(arr)/sizeof(arr[0]);    
        
   
    for (int i = 0; i < length; i++) {     
       sum = sum + arr[i];    
    }      
    printf("Sum of all the elements of an array: %d", sum);    
    return 0;    
}    

----------------------------------------------------------

#include <stdio.h>  
  
int main() {  
    int matrix[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};  
  
    printf("Matrix created using an array:\n");  
    for (int i = 0; i < 3; i++) {  
        for (int j = 0; j < 3; j++) {  
            printf("%d ", matrix[i][j]);  
        }  
        printf("\n");  
    }  
    return 0;  
} 

----------------------------------------------------------

#include <stdio.h>


void getMatrixElements(int matrix[][10], int row, int column) {

   printf("\nEnter elements: \n");

   for (int i = 0; i < row; ++i) {
      for (int j = 0; j < column; ++j) {
         printf("Enter a%d%d: ", i + 1, j + 1);
         scanf("%d", &matrix[i][j]);
      }
   }
}


void multiplyMatrices(int first[][10],
                      int second[][10],
                      int result[][10],
                      int r1, int c1, int r2, int c2) {


   for (int i = 0; i < r1; ++i) {
      for (int j = 0; j < c2; ++j) {
         result[i][j] = 0;
      }
   }


   for (int i = 0; i < r1; ++i) {
      for (int j = 0; j < c2; ++j) {
         for (int k = 0; k < c1; ++k) {
            result[i][j] += first[i][k] * second[k][j];
         }
      }
   }
}


void display(int result[][10], int row, int column) {

   printf("\nOutput Matrix:\n");
   for (int i = 0; i < row; ++i) {
      for (int j = 0; j < column; ++j) {
         printf("%d  ", result[i][j]);
         if (j == column - 1)
            printf("\n");
      }
   }
}

int main() {
   int first[10][10], second[10][10], result[10][10], r1, c1, r2, c2;
   printf("Enter rows and column for the first matrix: ");
   scanf("%d %d", &r1, &c1);
   printf("Enter rows and column for the second matrix: ");
   scanf("%d %d", &r2, &c2);


   while (c1 != r2) {
      printf("Error! Enter rows and columns again.\n");
      printf("Enter rows and columns for the first matrix: ");
      scanf("%d%d", &r1, &c1);
      printf("Enter rows and columns for the second matrix: ");
      scanf("%d%d", &r2, &c2);
   }

 
   getMatrixElements(first, r1, c1);

 
   getMatrixElements(second, r2, c
